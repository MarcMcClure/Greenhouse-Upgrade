5/15/2025
okay so i need the following for the MVP

ESP32-WROOM-32/ESP32 DevKit v1
DS18B20 Temp Sensor
12V→5V Buck Converter
assorted resisters
assorted LEDs
Bread Board
jumpers

logic

PLC inputs
	sensor bits
		upper temp high
		upper temp low
		lower temp high
		lower temp low
		humidity high
		humidity low
	buttons	(for version 1.2)
		manual mode button
		open vent button
		close vent button
		circulation fan button
		heater button
	safety
		vent open limit switch (Unpressed = 1, Pressed = 0)
		vent closed limit switch (Unpressed = 1, Pressed = 0)
		battery low

PLC intermediates
	vent should be open

PLC outputs
	vent motor (forward, reverse, or off)
	circulation fan (on, off)
	heater (on, off)

PLC Logic
	(upper temp high ∧ lower temp high) ∨ (humidity high ∧ ¬ upper temp low ∧ ¬ lower temp low)) -> vent should be open
	vent open limit switch ∧ vent should be open -> vent motor forward
	vent closed limit switch ∧ ¬ vent should be open -> vent motor reverse

	(upper temp high ∧ lower temp low) ∨ (upper temp low ∧ lower temp high) -> big temp diff
	big temp diff -> circulation fan on

	upper temp low ∧ lower temp low ∧ vent closed limit switch ∧ ¬ battery low  -> heater on

5/16/2025
instructions on getting vs code set up for Arduino and ESP32-DevKitC
https://docs.platformio.org/en/latest/tutorials/espressif32/arduino_debugging_unit_testing.html

I needed to manually download and install the Silicon Labs CP210x USB to UART Bridge VCP driver to get Windows to recognize the device.
When you create the project the platform is espressif32 and the framework is arduino
after that just copy the main.cpp file and run per docs
I have not touched a microcontroler in a couple years so the goal for v0.1 is just to get the indicater LED to flash

5/16/2025
The goal for v0.2 is to get the arduino to do a caluclationa and then  print the output to the tak moniter via the USB

The goal for v0.3 is to get the temp sensor working. 
	It will light a red LED when i warm the sensor with my hand and a blue LED when it is closed
	It will print the sensor reading to the output to the task moniter via the USB

I'm using a 5.1K ohm instead of a 4.7 K Ohm resister to connect the data because I have it on hand. It's technically in spec but not recomended. 
	I got an extra long cabel so the higher resistivity may be an issue in which case I will have to do some resister math. We will see.

Im having to use a jumper (the brown one) to connect the 3.3v to the power rail because i cant find a second breadboard.

You'll need the libraries OneWire and DallasTemperature to get the temp sensor working